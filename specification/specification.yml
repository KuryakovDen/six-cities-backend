openapi: 3.1.0
info:
  title: API сервер для проекта «Шесть городов»
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
tags:
  - name: users
    description: Действия с пользователями
  - name: offers
    description: Действия с офферами
  - name: comments
    description: Действия с комментариями
paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя

      requestBody:
        description: Данные для создания нового пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "400":
          description: Некорректные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequestError'
        "409":
          description: Пользоватьель с таким email уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/existedUserError'
  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя по логину и паролю

      requestBody:
        description: Данные для авторизации пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authUser'
        required: true
      responses:
        "201":
          description: Пользователь авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
  /users/logout:
    post:
      tags:
        - users
      summary: Выход из закрытой части приложения
      description: Сервис предоставляет ресурс для завершения пользовательского сеанса (доступен только авторизованным клиентам)
  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузка аватара для пользователя
      description: Загружает аватар пользователя по userId. Изображение должно быть в формате `png` или `jpg`
  /offers/list:
    get:
      tags:
        - offers
      summary: Получение списка всех предложений
      description: Пользователь получает список предложений по аренде (по умолчанию не более 60)
  /offers/create:
    post:
      tags:
        - offers
      summary: Создание оффера
      description: Пользователь создает оффер, передав необходимые данные для его создания
  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение детальной информации по офферу
      description: Пользователь получает всю необходимую информацию по офферу, передав offerId нужного оффера
    put:
      tags:
        - offers
      summary: Редактирование оффера
      description: Пользователь редактирует оффер, передав обновленные данные и offerId нужного оффера
    delete:
      tags:
        - offers
      summary: Удаление оффера
      description: Пользователь удаляет оффер, передав offerId нужного оффера
  /offers/{offerId}/favorites:
    post:
      tags:
        - offers
      summary: Добавление оффера в избранное
      description: Пользователь может добавить оффер в раздел "Избранное", передав offerId нужного оффера
    delete:
      tags:
        - offers
      summary: Удаление оффера из избранного
      description: Пользователь может удалить оффер из раздела "Избранное", передав offerId нужного оффера
  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Получение списка комментариев для оффера
      description: Пользователь может получить список всех комментариев для оффера, передав offerId нужного оффера
    post:
      tags:
        - comments
      summary: Создание комментария для оффера
      description: Пользователь может создать комментарий для оффера, передав offerId нужного оффера и данные комментария

components:
  schemas:
    createUser:
      type: object

      properties:
        name:
          type: string
          example: Denis
          description: Имя пользователя

        email:
          type: string
          format: email
          example: test@yandex.ru
          description: Email пользователя

        password:
          type: string
          example: 123456
          minLength: 6
          description: Пароль пользователя

        avatar:
          type: string
          example: avatar.jpg
          description: URL аватара пользователя (необязательный)

        userType:
          type: string
          example: standard
          enum: [standard, pro]
          description: Тип пользователя (standard или pro)

    authUser:
      type: object

      properties:
        email:
          type: string
          format: email
          example: test@yandex.ru
          description: Email пользователя

        password:
          type: string
          example: 12345
          description: Пароль пользователя

    user:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea
          description: ID пользователя

        email:
          type: string
          format: email
          example: test@yandex.ru
          description: Email пользователя

        avatar:
          type: string
          example: avatar.jpg
          description: URL аватара пользователя (необязательный)

        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6
          description: JWT access токен

    badRequestError:
      type: object

      properties:
        message:
          type: string
          example: "Некорректные данные запроса"
          description: Сообщение об ошибке

    existedUserError:
      type: object

      properties:
        message:
          type: string
          example: "Пользоватьель с таким email уже существует"
          description: Сообщение об ошибке


